DROP TABLE IF EXISTS operation_log;

CREATE TABLE operation_log
    (trans_date DATE,
    trans_time TIME,
    user_id VARCHAR(20),
    trans_type VARCHAR(6));


CREATE OR REPLACE FUNCTION logupdate() RETURNS TRIGGER
LANGUAGE 'plpgsql' AS
$BODY$
    DECLARE
        trans_type VARCHAR(6);
        user_name VARCHAR(20);
    BEGIN
        SELECT current_user INTO user_name;
            IF TG_OP = 'INSERT' THEN
            trans_type = 'insert';
        INSERT INTO operation_log VALUES(CURRENT_DATE, CURRENT_TIME,
            CURRENT_USER, trans_type);
            RETURN new;
            ELSIF TG_OP = 'UPDATE' THEN
            trans_type = 'update';
        INSERT INTO operation_log VALUES(CURRENT_DATE, CURRENT_TIME,
            CURRENT_USER, trans_type);
            RETURN new;
            ELSE
            trans_type = 'delete';
        INSERT INTO operation_log VALUES(CURRENT_DATE, CURRENT_TIME,
            CURRENT_USER, trans_type);
            RETURN old;
        END IF;
    END;
$BODY$


CREATE OR REPLACE TRIGGER logupdateTRIG
    AFTER INSERT OR UPDATE OR DELETE ON lease
    EXECUTE PROCEDURE logupdate();